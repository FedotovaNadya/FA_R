#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
plot((-10:10), x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
rep(3,5)
#Task 1 file ПР5_1
#1.1
z <- c(-10, 10, 0.2)
x<- z[1]:z[2]:z[3]
x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "f(x).jpeg")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
#x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
#x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
#x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
#x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
#x<- z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#Task 1 file ПР5_1
#1.1
x <- c(-10, 10, 0.2)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
x<-z[1]:z[2]
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
x<-seq(z[1],z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "f(x).jpeg")
#Task 1 file ПР5_1
#1.1
z <- c(-10, 10, 0.2)
x<-seq(z)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "f(x).jpeg")
dev.off()
#Task 1 file ПР5_1
#1.1
z <- c(-10, 10, 0.2)
x<-seq(z)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#Task 1 file ПР5_1
#1.1
z <- c(-10, 10, 0.2)
x<-seq(z)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
x<-seq(z)
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
n <- c(2, 5, 6, 7, 9)
plot(n)
plot(n^2)
x <- seq(-4,4,0.1)
x
plot(x, log(x), type = "l")
? plot
plot(x, log(x), type = "l")
lines(x,exp(x), col = "red")
#Task 1 file ПР5_1
#1.1
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "f(x).jpeg")
#1.3
jpeg("f(x).jpeg")
dev.off()
#Task 1 file ПР5_1
#1.1
jpeg("f(x).jpeg")
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
dev.off()
#Task 1 file ПР5_1
#1.1
jpeg("f(x).jpeg")
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
dev.off()
#Task 1 file ПР5_1
#1.1
jpeg("f(x).jpg")
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
dev.off()
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
jpeg("f(x).jpg")
dev.off()
#Task 1 file ПР5_1
#1.1
dev.copy(png, "graph.png")
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
dev.off()
#Task 1 file ПР5_1
#1.1
dev.copy(png, "graph.png")
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
dev.off()
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(png, "graph.png")
dev.off()
#1.3
dev.copy(png, "f(x).jpeg")
dev.off()
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(png, "f(x).jpeg")
#1.3
dev.copy(jpeg, "f(x).jpeg")
dev.off()
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "f(x).jpeg")
dev.off()
#1.3
dev.copy(jpeg, "/R/f(x).jpeg")
dev.off()
#1.3
dev.copy(jpeg, "R\f(x).jpeg")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "R\f(x).jpeg")
dev.off()
z <- c(-10, 10, 0.2)
x<-seq(z[1], z[2], z[3])
plot(x, x^2, type = "l", col = "red", xlab = "x", ylab = "f(x)")
lines(x, x^3, col = "blue")
#1.2
legend("bottomleft", legend=c("y=x^2", "y=x^3"), lwd = c(1,1),
col=c("red", "blue"), cex=0.8)
#1.3
dev.copy(jpeg, "R\f(x).jpeg")
#1.3
dev.copy(jpeg, ".\R\f(x).jpeg")
#1.3
dev.copy(jpeg, "C:\Users\Asus\Documents\R\f(x).jpeg")
#1.3
dev.copy(jpeg, "C:\\Users\\Asus\\Documents\\R\\f(x).jpeg")
#1.3
dev.copy(jpeg, "\\R\\f(x).jpeg")
#1.3
dev.copy(jpeg, "R\\f(x).jpeg")
#1.3
dev.copy(jpeg, "R\\5-1.jpeg")
#Task 2 file ПР5_2
mycars = mtcars
hist(mycars$hp, main = "Horsepower of cars", col = "lightblue",
xlab = "Horsepower value", ylab = "Counts", breaks = 20,
right = FALSE, freq = FALSE, border = "chocolate")
abline(v = mean(mycars$hp), col = "red",
lty = 3, lwd = 3)
abline(v = median(mycars$hp), col = "black",
lty = 4, lwd = 3)
#Task 2 file ПР5_2
#2.1
mycars = mtcars
#2.2
hist(mycars$hp, main = "Horsepower of cars", col = "lightblue",
xlab = "Horsepower value", ylab = "Counts", breaks = 20,
right = FALSE, freq = FALSE, border = "chocolate")
#2.2
hist(mycars$hp, main = "Horsepower of cars", col = "lightgreen",
xlab = "Horsepower value", ylab = "Counts", breaks = 20,
right = FALSE, freq = FALSE, border = "chocolate")
#2.2
hist(mycars$hp, main = "Horsepower of cars", col = "lightgreen",
xlab = "Horsepower value", ylab = "Counts", breaks = 20,
right = FALSE, freq = FALSE, border = "gray")
abline(v = mean(mycars$hp), col = "red",
lty = 3, lwd = 3)
abline(v = median(mycars$hp), col = "black",
lty = 4, lwd = 3)
v1 <- c(1, 2.5, "organic")
v2 <- c(2, 1.5, "organic")
v3 <- c(3, 0.9, "conventional")
test <-data.frame(v1, v2, v3)
test
trans.test <- transform.data.frame(test)
trans.test
trans.test <- t(test)
trans.test
typeof(trans.test)
typeof(test)
test <-bind.data.frame(v1, v2, v3)
test <-rbind.data.frame(v1, v2, v3)
test
typeof(test)
test <-data.frame(v1, v2, v3)
test
trans.test <- as.data.frame(t(test))
trans.test
typeof(trans.test)
trans.test[v1]
trans.test[V1]
trans.test["V1"]
typeof(trans.test["V1"])
typeof(trans.test["V2"])
typeof(trans.test["V3"])
#Task4
polit<-read.csv("polit.csv")
#Task4
polit<-read.csv("polit.csv")
setwd("~/FA_R")
#Task4
polit<-read.csv("polit.csv")
polit
#Task5
View(polit)
summary(polit)
colnames(polit) <- c("CNT","CPI", "FH")
#Task5
View(polit)
summary(polit)
#Task7
olme<-read.csv("Olympic-medals.csv")
View(olme)
summary(olme)
#Task8
print(olme[$Sport="Swimming"])
#Task8
print(olme[Sport="Swimming"])
#Task8
print(olme[olme$Sport="Swimming"])
#Task8
print(olme[olme$Sport=="Swimming"])
#Task8
print(olme[olme$Sport=="Swimming", 3:4])
#Task8
print(olme[olme$Sport=="Swimming"])
#Task8
swim_new<-(olme[olme$Sport=="Swimming"])
swim_new
#Task8
swim_new<-as.data.frame(olme[olme$Sport=="Swimming"])
swim_new
#Task8
swim_new<-as.data.frame(olme[olme$Sport=="Swimming"])
swim_new
view(swim_new)
View(swim_new)
#Task8
swim_new<-as.data.frame(olme[olme$Discipline=="Swimming"])
#Task8
swim_new<-(olme[olme$Discipline=="Swimming"])
View(swim_new)
#Task8
swim_new<-olme[olme$Discipline=="Swimming"]
#Task8
swim_new<-olme[olme$Discipline=="Swimming", 3:4]
View(swim_new)
#Task8
swim_new<-olme[olme$Discipline=="Swimming", :]
#Task8
swim_new<-olme[olme$Discipline=="Swimming", 1:]
#Task8
swim_new<-olme[olme$Discipline=="Swimming" && olme$Year>2000]
View(swim_new)
#Task8
swim_new<-olme[olme$Discipline=="Swimming" && olme$Year>2000]
View(swim_new)
#Task8
swim_new<-olme[olme$Discipline=="Swimming" && olme$Year>2000, 1:11]
View(swim_new)
#Task8
swim_new=1
View(swim_new)
#Task8
swim_new=1
swim_new<-olme[olme$Discipline=="Swimming" && olme$Year>2000, 1:11]
View(swim_new)
swim_new<-olme[olme$Discipline=="Swimming" && olme$Year>2000, ]
View(swim_new)
swim_new<-olme[(olme$Discipline=="Swimming") && (olme$Year>2000), ]
View(swim_new)
swim_new<-olme[(olme$Discipline=="Swimming") & (olme$Year>2000), ]
View(swim_new)
#Task9
swim_new$Sport <- NULL
swim_new$Country_Code <- NULL
View(swim_new)
#Task10
swim_new <- cbind(swim_new, Male = +(swim_new$Gender=="Men"))
View(swim_new)
#Task 7
#install.packages("readxl")
#install.packages("WriteXLS")
#library(tidyverse)
#library(readxl)
#library(WriteXLS)
#Task7.1
check_id <- function(work_name){
#1.	Принимает на вход название рабочей папки или путь к ней, делает указанную папку рабочей.
setwd(work_name)
#4.	Создаёт датафрейм с двумя столбцами:
df<-data.frame(filename=c(), type=c())
#2.	Открывает все CSV-файлы в рабочей папке. Считайте, что в папке также могут быть файлы других форматов.
files <- list.files()
for (f in list.files()) {
if (grepl("\\.csv",f)==1){
print(f)
dat<-read.csv(f)
num<-length(df$filename)+1
print(data.frame(filename=c(f), type=c(1)))
res_id<-c(0)
#3.	Проверяет, есть ли среди столбцов столбец с названием ID.
for (col in colnames(dat)){
if ("ID"==col){
res_id[1]<-1
}
}
df<-rbind(df, data.frame(filename=c(f), type=res_id))
}
}
#5.	Выгружает в файл info.xlsx датафрейм с полученной в пункте выше информацией.
write_xlsx(df, "info.xlsx")
print(df)
}
check_id("C:/Users/Asus/Documents/FA_R")
#Task7.2
## Выгрузите в формат CSV встроенный в R датафрейм InsectSprays, назвав файл Insects.csv.
write.csv(InsectSprays, "Insects.csv")
#1. Загрузите в R данные по пассажирам «Титаника» из файла titanic_small.csv.
tit<-read.csv("titanic_small.csv")
tit
#2. Переименуйте столбцы таким образом, чтобы названия стали следующими: ID, gender, class, price. Подсказка: используйте функцию colnames().
colnames(tit) <- c("X", "ID", "gender", "class", "price")
tit
#3. Выгрузите обновленный файл в формате Excel с расширением .xlsx.
write_xlsx(tit, "titanic_smal.xlsx")
#Task3
#Задача 3.
#Загрузите в R данные из файла data.txt. Выведите на экран структуру полученного датафрейма.
datatxt<-read.table("data.txt")
datatxt
#Загрузите в R данные из файла prices.txt, считая, что в качестве разделителя столбцов используется символ для табуляции, а также учитывая, что названий столбцов в этом файле нет (первая строка – уже сами данные).
pricestxt<-read.table("prices.txt", header = FALSE, sep = "\t")
pricestxt
#Работа с Датафреймами
#Task1
v1 <- c(1, 2.5, "organic")
v2 <- c(2, 1.5, "organic")
v3 <- c(3, 0.9, "conventional")
test <-data.frame(v1, v2, v3)
test
#Task2
trans.test <- as.data.frame(t(test))
trans.test
#Task3 ????
typeof(trans.test["V1"])
typeof(trans.test["V2"])
typeof(trans.test["V3"])
#Task4
polit<-read.csv("polit.csv")
polit
#Task5
View(polit)
summary(polit)
#Task6
colnames(polit) <- c("CNT","CPI", "FH")
#Task7
olme<-read.csv("Olympic-medals.csv")
View(olme)
summary(olme)
#Task8
swim_new=1
swim_new<-olme[(olme$Discipline=="Swimming") & (olme$Year>2000), ]
View(swim_new)
#Task9
swim_new$Sport <- NULL
swim_new$Country_Code <- NULL
View(swim_new)
#Task10
swim_new <- cbind(swim_new, Male = +(swim_new$Gender=="Men"))
View(swim_new)
